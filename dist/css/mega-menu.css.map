{"version":3,"file":"css/mega-menu.css","mappings":"AAQA;EACE;EACA;EACA;AAPF;;AAUA;EACE;EACA;EACA;EACA;EACA;EACA;EACA;AAPF;AASE;EACE;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AAPJ;AAUE;EACE;EACA;EACA;AARJ;AAUI;ECrCF,cDsCkB;EACd;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AARN;ACvCE;EACE,cDmCgB;AAMpB;ACtCE;EAEE,cD8ByC;AAS7C;ACpCE;EACE,cD0ByC;AAY7C;AAEI;EE9CF;EACA,mBAHS;ECgGT;KAAA;UAAA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EHvDI;AAWN;AExDE;EACE,sBARM;AFkEV;AEvDE;EACE;AFyDJ;AGwCE;EACE;EACA;EACA;AHtCJ;AAlBE;EACE;AAoBJ;;AAhBA;EACE;AAmBF;;AAhBA;EACE;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AAmBF;AAfI;;EE9EF;EACA,mBAHS;AFoGX;AE/FE;;EACE,sBF2EiB;AAuBrB;AE/FE;;EACE;AFkGJ;AAvBE;EACE;EACA;EACA;AAyBJ;;AArBA;EACE;AAwBF;;AArBA;EIvEE;EACA;EACA;EAGE;EACA;EJmEF;EACA;EACA;EACA;EACA;EACA;EACA;AA4BF;AK7HE;ELyFF;II5DM;IACA;EJoGJ;AACF;AIhGE;EACE;EACA;AJkGJ;;AAnCA;EEzGE;EACA,mBAHS;ECgGT;KAAA;UAAA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EHIA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AAiDF;AEhKE;EACE,sBARM;AF0KV;AE/JE;EACE;AFiKJ;AGhEE;EACE;EACA;EACA;AHkEJ;AA1DE;EACE;EACA;AA4DJ;AAzDE;EACE;AA2DJ;;AAvDA;EACE;EACA;EACA;AA0DF;;AAvDA;EACE;AA0DF;;AAvDA;EMzIE;EACA;EACA;ANoMF;AMlME;EACE;ANoMJ;AMlMI;EACE;ANoMN;;AA/DA;EACE;AAkEF;;AA/DA;EACE;AAkEF;;AA/DA;AACA;EACE;AAkEF;;AA/DA;EACE;AAkEF;;AA/DA;EACE;EACA;EACA;EACA;EACA;EACA;AAkEF;;AA9DE;EACE;AAiEJ;AA/DI;EACE;EACA;EACA;EACA;EACA;EACA;EACA;AAiEN;AA1DE;EACE;AA4DJ;AA1DI;EACE;EACA;AA4DN;AAxDE;EACE;AA0DJ;AAxDI;EACE;EACA;AA0DN;;AArDA;EACE;EACA;EACA;EACA;EACA;AAwDF;AAtDE;EACE;EACA;AAwDJ;AArDE;EACE;EACA;AAuDJ;;AAlDE;EACE;EACA;AAqDJ;;AAlDA;AKvME;EL0MA;IACE;EAoDF;;EAjDA;;IAEE;EAoDF;AACF;AK5RE;EL6OE;IACE;EAkDJ;EA/CE;IACE;EAiDJ;EA9CE;IACE;EAgDJ;AACF,C","sources":["webpack://gesso/./source/03-components/mega-menu/mega-menu.scss","webpack://gesso/./source/00-config/mixins/_link.scss","webpack://gesso/./source/00-config/mixins/_focus.scss","webpack://gesso/./source/00-config/mixins/_button.scss","webpack://gesso/./source/00-config/mixins/_layout.scss","webpack://gesso/./source/00-config/mixins/_breakpoint.scss","webpack://gesso/./source/00-config/mixins/_list.scss"],"sourcesContent":["// @file\n// Styles for the Mega Menu.\n@use '00-config' as *;\n\n// Adjust the selector and colors as needed for your site.\n// If the mega menu is not the top element on the page,\n// the element(s) above it need a background color and\n// z-index in order to cover the mega menu.\n.l-header {\n  background: gesso-color('background', 'site');\n  position: relative;\n  z-index: 2;\n}\n\n.c-mega-menu {\n  align-items: center;\n  background: gesso-color('background', 'site');\n  display: flex;\n  margin: 0 0 rem(gesso-spacing(2.5));\n  position: relative;\n  width: 100%;\n  z-index: 1;\n\n  &::after {\n    background-color: gesso-color(background, site);\n    content: '';\n    display: block;\n    height: 100%;\n    left: 0;\n    position: absolute;\n    top: 0;\n    width: 100%;\n    z-index: gesso-z-index(drawer);\n  }\n\n  > .c-mega-menu__item {\n    border-bottom: 1px solid gesso-grayscale(white);\n    list-style-type: none;\n    padding: 1.25rem 1.8125rem 1.25rem 0.8125rem;\n\n    > .c-mega-menu__link {\n      @include link(gesso-color(text, link), gesso-color(text, link-hover));\n      border-bottom: rem(2px) solid transparent;\n      border-radius: rem(1px);\n      display: block;\n      font-size: rem(gesso-font-size(4));\n      font-weight: gesso-font-weight(regular);\n      padding: rem(4.8px) 0;\n      position: relative;\n      text-align: left;\n      transition: all 0.4s ease;\n      width: auto;\n      z-index: gesso-z-index(drawer) + 1;\n    }\n\n    button.c-mega-menu__link {\n      @include text-button;\n      font-size: rem(gesso-font-size(4));\n    }\n  }\n\n  > .c-mega-menu__item:last-child > a {\n    font-weight: gesso-font-weight(bold);\n  }\n}\n\n.c-mega-menu__item {\n  margin-bottom: 0;\n}\n\n.c-mega-menu__section {\n  background-color: gesso-color(ui, generic, background-dark);\n  color: gesso-color(text, on-dark);\n  left: 0;\n  margin-bottom: 0;\n  margin-top: 0;\n  overflow-wrap: normal;\n  padding: rem(gesso-spacing(7));\n  position: absolute;\n  top: 100%;\n  transform: translate3d(0, 0, 0);\n  transition: transform gesso-duration(long) gesso-easing(ease-in-out);\n  width: 100%;\n  z-index: 0;\n\n  a,\n  button {\n    &:focus {\n      @include focus(gesso-color(text, on-dark));\n    }\n  }\n\n  &[hidden] {\n    display: block;\n    transform: translate3d(0, -100%, 0);\n    z-index: -1;\n  }\n}\n\n.menu__section-title {\n  display: none;\n}\n\n.c-mega-menu__section-inner {\n  @include layout-constrain();\n  align-items: flex-start;\n  display: grid;\n  gap: rem(gesso-spacing(10));\n  grid-template-columns: rem(250px) 1fr 1fr;\n  margin-top: rem(gesso-spacing(2));\n  padding-left: rem(gesso-site-margins(desktop));\n  padding-right: rem(gesso-site-margins(desktop));\n}\n\n.c-mega-menu__section-close {\n  @include text-button;\n  color: gesso-color(text, on-dark);\n  height: rem(50px);\n  position: absolute;\n  right: rem(10px);\n  text-align: center;\n  top: rem(10px);\n  transition: opacity gesso-duration(short) gesso-easing(ease-in);\n  width: rem(50px);\n\n  .c-mega-menu__close-icon {\n    height: rem(22px);\n    width: rem(32px);\n  }\n\n  &:hover {\n    opacity: 0.85;\n  }\n}\n\n.c-mega-menu__section-title {\n  color: gesso-color(text, on-dark);\n  display: block;\n  font-size: rem(gesso-font-size(9));\n}\n\n.c-mega-menu__icon {\n  transition: margin 0.2s;\n}\n\n.c-mega-menu__subnav {\n  @include list-clean;\n}\n\n.c-mega-menu__subnav .c-mega-menu__item:not(.has-subnav) {\n  margin-top: rem(gesso-spacing(1));\n}\n\n.c-mega-menu__subnav .c-mega-menu__item.has-subnav {\n  margin-top: 0;\n}\n\n/* stylelint-disable selector-max-compound-selectors */\n.c-mega-menu__subnav .c-mega-menu__subnav {\n  margin-top: gesso-spacing(1);\n}\n\n.c-mega-menu__subnav .c-mega-menu__subnav .c-mega-menu__item {\n  margin-bottom: gesso-spacing(1);\n}\n\n.c-mega-menu__subnav .c-mega-menu__link {\n  border-bottom: 0;\n  color: inherit;\n  font-size: rem(gesso-font-size(4));\n  font-weight: gesso-font-weight(bold);\n  position: static;\n  text-decoration: none;\n}\n\n.c-mega-menu__subnav a.c-mega-menu__link {\n  > span {\n    white-space: nowrap;\n\n    &::after {\n      display: inline-block;\n      margin-left: rem(gesso-spacing(1));\n      margin-right: rem(gesso-spacing(0.5));\n      position: relative;\n      transition: margin 0.2s;\n      vertical-align: middle;\n      white-space: nowrap;\n    }\n  }\n\n  // Safari 14 doesn't recognize :focus-visible, so\n  // combining with the above selector causes the entire\n  // styles, including :hover, to be ignored.\n  &:hover {\n    opacity: 0.85;\n\n    > span::after {\n      margin-left: rem(gesso-spacing(1.5));\n      margin-right: 0;\n    }\n  }\n\n  &:focus-visible {\n    opacity: 0.85;\n\n    > span::after {\n      margin-left: rem(gesso-spacing(1.5));\n      margin-right: 0;\n    }\n  }\n}\n\n.c-mega-menu__subnav .c-mega-menu__subnav .c-mega-menu__link {\n  color: gesso-brand(blue, light-1);\n  font-size: rem(gesso-font-size(2));\n  font-weight: gesso-font-weight(semibold);\n  line-height: gesso-line-height(tight);\n  text-transform: none;\n\n  &:hover {\n    color: gesso-grayscale(white);\n    opacity: 1;\n  }\n\n  &:focus-visible {\n    color: gesso-grayscale(white);\n    opacity: 1;\n  }\n}\n\n.c-mega-menu__subnav .c-mega-menu__subnav a.c-mega-menu__link {\n  > span::after {\n    content: '';\n    display: none;\n  }\n}\n/* stylelint-enable selector-max-compound-selectors */\n\n@include breakpoint-max(gesso-breakpoint(mobile-menu)) {\n  .c-mega-menu__section {\n    background-color: rgba(gesso-color(ui, generic, background-lighter), 0.98);\n  }\n\n  .c-mega-menu__section-title,\n  .c-mega-menu__section-close {\n    display: none;\n  }\n}\n\n@include breakpoint(gesso-breakpoint(desktop-lg)) {\n  .c-mega-menu {\n    .c-mega-menu__section {\n      padding: rem(gesso-spacing(10)) rem(gesso-spacing(12));\n    }\n\n    .c-mega-menu__section-inner {\n      gap: rem(100px);\n    }\n\n    .c-mega-menu__section .menu__subnav {\n      gap: rem(gesso-spacing(4));\n    }\n  }\n}\n","// Mixins: Link\n\n@mixin link($link, $hover: $link, $active: $hover, $visit: $link) {\n  color: $link;\n\n  &:visited {\n    color: $visit;\n  }\n\n  &:hover,\n  &:focus {\n    color: $hover;\n  }\n\n  &:active {\n    color: $active;\n  }\n}\n","// Mixins: Focus\n\n@use '00-config/functions/gesso' as *;\n\n@mixin focus(\n  $color: gesso-color(ui, generic, focus),\n  $width: 2px,\n  $offset: 2px\n) {\n  outline: $width solid transparent;\n  outline-offset: $offset;\n\n  &:focus {\n    outline-color: $color;\n  }\n\n  &:focus:not(:focus-visible) {\n    outline-color: transparent;\n  }\n}\n","// Mixins: Button\n\n@use '../functions/' as *;\n@use './focus' as *;\n\n$button-border-width: 0 !default;\n$button-border-radius: 0 !default;\n$button-background-color: gesso-color(button, primary, background) !default;\n$button-background-color-active: gesso-color(\n  button,\n  primary,\n  background-active\n) !default;\n$button-background-color-disabled: gesso-color(\n  button,\n  disabled,\n  background\n) !default;\n$button-background-color-hover: gesso-color(\n  button,\n  primary,\n  background-hover\n) !default;\n$button-border-color: gesso-color(button, primary, border) !default;\n$button-border-color-hover: gesso-color(button, primary, border-hover) !default;\n$button-border-color-disabled: gesso-color(button, disabled, border) !default;\n$button-text-color: gesso-color(button, primary, text) !default;\n$button-text-color-active: gesso-color(button, primary, text-active) !default;\n$button-text-color-disabled: gesso-color(button, disabled, text) !default;\n$button-text-color-hover: gesso-color(button, primary, text-hover) !default;\n$button-font-size: gesso-base-font-size() !default;\n\n@mixin button(\n  $color-background: $button-background-color,\n  $color-text: $button-text-color,\n  $color-border: $button-border-color,\n  $color-background-hover: $button-background-color-hover,\n  $color-text-hover: $button-text-color-hover,\n  $color-border-hover: $button-border-color-hover,\n  $color-background-active: $button-background-color-active,\n  $color-text-active: $button-text-color-active,\n  $color-background-disabled: $button-background-color-disabled,\n  $color-border-disabled: $button-border-color-disabled,\n  $color-text-disabled: $button-text-color-disabled,\n  $border-radius: $button-border-radius,\n  $border-width: $button-border-width,\n  $font-size: $button-font-size\n) {\n  background-color: $color-background;\n  @if $border-width != 0 {\n    border: $border-width solid $color-border;\n  } @else {\n    border: 0;\n  }\n  border-radius: $border-radius;\n  color: $color-text;\n  cursor: pointer;\n  display: inline-block;\n  font-family: gesso-font-family(primary);\n  font-size: rem($font-size);\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  font-weight: gesso-font-weight(bold);\n  line-height: gesso-line-height(base);\n  padding: rem(gesso-spacing(1)) rem(gesso-spacing(2));\n  text-align: center;\n  text-decoration: none;\n  transition: background gesso-duration(short) gesso-easing(ease-in);\n  vertical-align: top;\n  white-space: normal;\n\n  &:visited {\n    color: $color-text;\n  }\n\n  &:hover,\n  &:focus {\n    background-color: $color-background-hover;\n    @if $border-width != 0 {\n      border-color: $color-border-hover;\n    }\n    color: $color-text-hover;\n  }\n\n  &:active,\n  &.is-active {\n    background-color: $color-background-active;\n    color: $color-text-active;\n  }\n\n  &[disabled] {\n    background-color: $color-background-disabled;\n    @if $border-width != 0 {\n      border-color: $color-border-disabled;\n    }\n    color: $color-text-disabled;\n    cursor: default;\n    pointer-events: none;\n  }\n}\n\n@mixin text-button() {\n  @include focus();\n  appearance: none;\n  background: transparent;\n  border: 0;\n  border-radius: 0;\n  box-shadow: none;\n  cursor: pointer;\n  font-family: inherit;\n  font-size: inherit;\n  padding: 0;\n  -webkit-tap-highlight-color: transparent;\n\n  &[disabled] {\n    color: gesso-color(button, disabled, text);\n    cursor: default;\n    pointer-events: none;\n  }\n}\n","// Mixins: Layout\n\n@use '../functions' as *;\n@use 'breakpoint' as *;\n\n@mixin layout-align-left($margin) {\n  float: left;\n\n  @if $margin {\n    margin-right: $margin;\n  }\n}\n\n@mixin layout-align-right($margin) {\n  float: right;\n\n  @if $margin {\n    margin-left: $margin;\n  }\n}\n\n@mixin layout-align-none {\n  float: none;\n  margin-left: 0;\n  margin-right: 0;\n}\n\n@mixin layout-constrain(\n  $max-width: gesso-constrain(md),\n  $margins-mobile: gesso-site-margins(mobile),\n  $margins: gesso-site-margins(desktop)\n) {\n  margin-left: auto;\n  margin-right: auto;\n  max-width: rem($max-width);\n\n  @if $margins-mobile {\n    padding-left: rem($margins-mobile);\n    padding-right: rem($margins-mobile);\n  }\n\n  @if $margins {\n    @include breakpoint(gesso-breakpoint(desktop)) {\n      padding-left: 16px;\n      padding-right: 16px;\n    }\n  }\n\n  // Just in case .l-constrain is nested within another .l-constrain.\n  & & {\n    padding-left: 0;\n    padding-right: 0;\n  }\n}\n\n// Breaks something outside its parent l-constrain or other centered container\n// and makes it flush with the edge of the viewport.\n@mixin layout-full-bleed() {\n  left: 50%;\n  margin-left: -50vw;\n  margin-right: -50vw;\n  position: relative;\n  right: 50%;\n  width: 100vw;\n}\n\n// Reverses the above.\n@mixin layout-undo-full-bleed() {\n  left: auto;\n  margin-left: 0;\n  margin-right: 0;\n  position: static;\n  right: auto;\n  width: auto;\n}\n","// Mixins: Breakpoint\n// A 16px base value is passed to em() functions within breakpoint mixins due\n// to browsers not using the Gesso base font size for media query calculations.\n\n@use 'sass:string';\n@use '../config.settings' as *;\n@use '../functions' as *;\n\n// Create a min-width media query.\n// @param {Number} $breakpoint - width value.\n@mixin breakpoint-min($breakpoint) {\n  @if $breakpoints-ems {\n    $breakpoint: em($breakpoint, 16px);\n  }\n  @media (min-width: #{$breakpoint}) {\n    @content;\n  }\n}\n\n// Assume min-width if shorthand breakpoint mixin is used.\n// @param {Number} $breakpoint - width value.\n@mixin breakpoint($breakpoint) {\n  @include breakpoint-min($breakpoint) {\n    @content;\n  }\n}\n\n// Create a max-width media query.\n// @param {Number} $breakpoint - width value.\n// @param {Boolean} $subtract_1_from_max - whether to subtract 1px from $breakpoint value.\n@mixin breakpoint-max($breakpoint, $subtract_1_from_max: false) {\n  @if $subtract_1_from_max {\n    $breakpoint: px($breakpoint) - 1px;\n  }\n  @if $breakpoints-ems {\n    $breakpoint: em($breakpoint, 16px);\n  }\n  @media (max-width: #{$breakpoint}) {\n    @content;\n  }\n}\n\n// Create a media query with both min-width and max-width.\n// @param {Number} $breakpoint-min - width value.\n// @param {Number} $breakpoint-max - width value.\n// @param {Boolean} $subtract_1_from_max - whether to subtract 1px from $breakpoint-max value.\n@mixin breakpoint-min-max(\n  $breakpoint-min,\n  $breakpoint-max,\n  $subtract_1_from_max: false\n) {\n  @if $subtract_1_from_max {\n    $breakpoint-max: px($breakpoint-max) - 1px;\n  }\n  @if $breakpoints-ems {\n    $breakpoint-min: em($breakpoint-min, 16px);\n    $breakpoint-max: em($breakpoint-max, 16px);\n  }\n  @media (min-width: #{$breakpoint-min}) and (max-width: #{$breakpoint-max}) {\n    @content;\n  }\n}\n","// Mixins: List\n\n@use '../config.settings' as *;\n@use '../functions' as *;\n@use 'clearfix' as *;\n@use 'breakpoint' as *;\n\n@mixin list-clean {\n  list-style-type: none;\n  margin: 0;\n  padding: 0;\n\n  li {\n    padding-left: 0;\n\n    &::before {\n      display: none;\n    }\n  }\n}\n\n@mixin list-inline {\n  list-style-type: none;\n  margin-left: 0;\n  padding-left: 0;\n\n  li {\n    padding-left: 0;\n  }\n\n  > li {\n    display: inline;\n  }\n}\n\n@mixin list-pipeline($pipeline-border-color: gesso-color(ui, generic, border)) {\n  @include clearfix();\n  list-style-type: none;\n  margin-left: 0;\n  padding-left: 0;\n\n  > li {\n    border-right: 1px solid $pipeline-border-color; // LTR\n    display: block;\n    float: left; // LTR\n    margin-right: 0.75em; // LTR\n    padding-left: 0;\n    padding-right: 0.75em; // LTR\n\n    @if $support-for-rtl {\n      [dir='rtl'] & {\n        border-left: 1px solid $pipeline-border-color;\n        border-right: 0;\n        float: right;\n        margin-left: 0.75em;\n        margin-right: 0;\n        padding-left: 0.75em;\n        padding-right: 0;\n      }\n    }\n\n    &.is-active {\n      font-weight: gesso-font-weight(bold);\n    }\n\n    &:last-child {\n      border-right: 0; // LTR\n      margin-right: 0; // LTR\n      padding-right: 0; // LTR\n\n      @if $support-for-rtl {\n        [dir='rtl'] & {\n          border-left: 0;\n          margin-left: 0;\n          padding-left: 0;\n        }\n      }\n    }\n  }\n}\n\n@mixin list-border(\n  $list-border-padding: 0.25rem,\n  $list-border-color: gesso-color(ui, generic, border)\n) {\n  list-style: none;\n  margin-left: 0;\n  padding-left: 0;\n\n  li {\n    padding-left: 0;\n  }\n\n  > li {\n    border-bottom: 1px solid $list-border-color;\n    padding: $list-border-padding;\n  }\n}\n\n@mixin list-column(\n  $list-column-count: 2,\n  $list-column-gap: 2em,\n  $list-item-padding: 0.25em\n) {\n  list-style: none;\n  margin-left: 0;\n  padding-left: 0;\n\n  li {\n    padding-left: 0;\n  }\n\n  > li {\n    break-inside: avoid-column;\n    display: table; // break-inside alternative for Firefox\n    margin-bottom: 0;\n    padding-bottom: $list-item-padding; // use padding instead of margin for Safari bug with CSS columns\n  }\n\n  @include breakpoint(500px) {\n    column-count: $list-column-count;\n    column-gap: $list-column-gap;\n  }\n}\n"],"names":[],"sourceRoot":""}
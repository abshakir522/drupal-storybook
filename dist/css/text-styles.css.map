{"version":3,"file":"css/text-styles.css","mappings":"AAIA;EACE;AAHF;;AAMA;EACE;AAHF;;AAOE;ECEI;EAAA;EAAA;EAAA;ECsBF;EAEA;AFxBJ;;AAFE;ECEI;EAAA;EAAA;EAAA;ECsBF;EAEA;AFfJ;;AAXE;ECEI;EAAA;EAAA;EAAA;ECsBF;EAEA;AFNJ;;AApBE;ECEI;EAAA;EAAA;EAAA;ECsBF;EAEA;AFGJ;;AA7BE;ECEI;EAAA;EAAA;EAAA;ECsBF;EAEA;AFYJ;;AAtCE;ECEI;EAAA;EAAA;EAAA;ECAF,eARS;AFoDb;;AA9CE;ECEI;EAAA;EAAA;EAAA;EAAA;EAAA;ECAF,mBARS;AF8Db;;AAxDE;ECEI;EAAA;EAFA;EAEA;EAAA;AD8DN;;AAhEE;ECEI;EAAA;EAFA;EAEA;EAAA;ADsEN;;AAxEE;ECEI;EAAA;EAFA;EAEA;EAAA;AD8EN;;AAhFE;ECEI;EAAA;EAFA;EAEA;EAAA;EAAA;EAAA;ADwFN,C","sources":["webpack://gesso/./source/01-global/01-typography/text-styles.scss","webpack://gesso/./source/00-config/mixins/_display-text-style.scss","webpack://gesso/./source/00-config/mixins/_responsive-font-size.scss"],"sourcesContent":["// Storybook: Text Styles\n\n@use '00-config' as *;\n\n.gesso-storybook-text-style {\n  margin-bottom: 3rem;\n}\n\n.gesso-storybook-text-style__label {\n  text-transform: uppercase;\n}\n\n@each $name, $style in gesso-get-map(typography, display) {\n  .gesso-storybook-text-style__preview--#{$name} {\n    @include display-text-style($name);\n  }\n}\n","// Mixins: Display Text Style\n\n@use '../functions' as *;\n@use './responsive-font-size' as *;\n\n@mixin display-text-style($keys...) {\n  $display: gesso-get-map(typography, display, $keys...);\n\n  @each $property, $value in $display {\n    @if ($property == 'responsive-font-size') {\n      @include responsive-font-size($value);\n    } @else if ($property == 'font-size') {\n      // Check for px if not output value.\n      #{$property}: #{rem(convert($value))};\n    } @else {\n      #{$property}: #{$value};\n    }\n  }\n}\n","// Mixins: Responsive Font Size\n\n@use 'sass:math';\n@use '../config.settings' as *;\n@use '../functions' as *;\n\n@mixin responsive-font-size($font-scale) {\n  $min-size: rem(\n    gesso-get-map(typography, responsive-font-size, $font-scale, min)\n  );\n  $max-size: rem(\n    gesso-get-map(typography, responsive-font-size, $font-scale, max)\n  );\n\n  @if $min-size == $max-size {\n    font-size: $min-size;\n  } @else {\n    $ideal-size: gesso-get-map(\n      typography,\n      responsive-font-size,\n      $font-scale,\n      val\n    );\n    @if $ideal-size == 'auto' {\n      // For more details on how we calculate the ideal size:\n      // https://css-tricks.com/linearly-scale-font-size-with-css-clamp-based-on-the-viewport/\n      $min-width: rem(\n        gesso-get-map(typography, responsive-font-size-min-width)\n      );\n      $max-width: rem(\n        gesso-get-map(typography, responsive-font-size-max-width)\n      );\n      $slope: math.div($max-size - $min-size, $max-width - $min-width);\n      $intersection: -1 * $min-width * $slope + $min-size;\n      $ideal-size: $intersection + ' + ' + $slope * 100vw;\n    }\n\n    font-size: clamp(#{$min-size}, #{$ideal-size}, #{$max-size});\n    // stylelint-disable-next-line\n    -webkit-marquee-increment: 0vw; // Needed to get clamp() to work in Safari.\n  }\n}\n"],"names":[],"sourceRoot":""}